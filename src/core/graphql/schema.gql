# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthModel {
  message: String
  user: UserModel
}

input ChangeEmailInput {
  email: String!
}

input ChangeNotificationsSettingsInput {
  siteNotifications: Boolean!
  telegramNotifications: Boolean!
}

type ChangeNotificationsSettingsResponse {
  notificationSettings: NotificationSettingsModel!
  telegramAuthToken: String
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input ChangeProfileInfoInput {
  bio: String!
  displayName: String!
  username: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeactivateAccountInput {
  email: String!
  password: String!
  pin: String
}

type DeviceModel {
  browser: String!
  os: String!
  type: String!
}

input EnableTotpInput {
  pin: String!
  secret: String!
}

type LocationModel {
  city: String!
  country: String!
  latidute: Float!
  longitude: Float!
}

input LoginInput {
  login: String!
  password: String!
  pin: String
}

type Mutation {
  changeEmail(data: ChangeEmailInput!): Boolean!
  changeNotificationsSettings(data: ChangeNotificationsSettingsInput!): ChangeNotificationsSettingsResponse!
  changePassword(data: ChangePasswordInput!): Boolean!
  changeProfileAvatar(avatar: Upload!): Boolean!
  changeProfileInfo(data: ChangeProfileInfoInput!): Boolean!
  clearSessionCookie: Boolean!
  createSocialLink(data: SocialLinkInput!): Boolean!
  createUser(data: CreateUserInput!): Boolean!
  deactivateAccount(data: DeactivateAccountInput!): AuthModel!
  disableTotp: Boolean!
  enableTotp(data: EnableTotpInput!): Boolean!
  loginUser(data: LoginInput!): AuthModel!
  logoutUser: Boolean!
  newPassword(data: NewPasswordInput!): Boolean!
  removeProfileAvatar: Boolean!
  removeSession(id: String!): Boolean!
  removeSocialLink(id: String!): Boolean!
  reorderSocialLinks(list: [SocialLinkOrderInput!]!): Boolean!
  resetPassword(data: ResetPasswordInput!): Boolean!
  updateSocialLink(data: SocialLinkInput!, id: String!): Boolean!
  verifyAccount(data: VerificationInput!): AuthModel!
}

input NewPasswordInput {
  password: String!
  passwordRepeat: String!
  token: String!
}

type NotificationModel {
  createdAt: DateTime!
  id: String!
  isRead: Boolean!
  message: String!
  type: NotificationType!
  updatedAt: DateTime!
  user: UserModel!
  userId: String!
}

type NotificationSettingsModel {
  createdAt: DateTime!
  id: String!
  siteNotifications: Boolean!
  telegramNotifications: Boolean!
  updatedAt: DateTime!
  user: UserModel!
  userId: String!
}

enum NotificationType {
  ENABLE_TWO_FACTOR
}

type Query {
  findCurrentSession: SessionModel!
  findNotificationsByUser: [NotificationModel!]!
  findNotificationsUnreadCount: Float!
  findProfile: UserModel!
  findSessionsByUser: [SessionModel!]!
  findSocialLinks: [SocialLinkModel!]!
  generateTotpSecret: TotpModel!
}

input ResetPasswordInput {
  email: String!
}

type SessionMetadataModel {
  device: DeviceModel!
  ip: String!
  location: LocationModel!
}

type SessionModel {
  createdAt: String!
  id: ID!
  metadata: SessionMetadataModel!
  userId: String!
}

input SocialLinkInput {
  title: String!
  url: String!
}

type SocialLinkModel {
  createdAt: DateTime!
  id: ID!
  position: Float!
  title: String!
  updatedAt: DateTime!
  url: String!
  userId: String!
}

input SocialLinkOrderInput {
  id: String!
  position: Float!
}

type TotpModel {
  qrcodeUrl: String!
  secret: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserModel {
  avatar: String
  bio: String
  createdAt: DateTime!
  deactivatedAt: DateTime
  displayName: String!
  email: String!
  id: ID!
  isDeactivated: Boolean!
  isEmailVerified: Boolean!
  isTotpEnabled: Boolean!
  isVerified: Boolean!
  notificationSettings: NotificationSettingsModel
  notifications: [NotificationModel!]!
  password: String!
  socialLinks: [SocialLinkModel!]!
  telegramId: String
  totpSecret: String
  updatedAt: DateTime!
  username: String!
}

input VerificationInput {
  token: String!
}